<Activity mc:Ignorable="sap sap2010" x:Class="TxtFileToExcel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Mainfolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2068.8,11990.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TxtFileToExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="TxtFileToExcel" sap:VirtualizedContainerService.HintSize="2079.2,11925.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TxtPath" />
      <Variable x:TypeArguments="s:String[]" Name="Files" />
      <Variable x:TypeArguments="x:String" Name="TxtLocation" />
      <Variable x:TypeArguments="x:Boolean" Name="CreateDuplicate" />
      <Variable x:TypeArguments="x:String" Name="rootFolder" />
      <Variable x:TypeArguments="x:String" Name="logFileName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="2036,248.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,160.8" sap2010:WorkflowViewState.IdRef="Sequence_79">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="Assign_72">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[rootFolder]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Mainfolder]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="2036,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Step 0 - Project Config.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="rootFolder">[rootFolder]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="2036,69.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TxtPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[rootFolder+"\TextFolder\"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="2036,69.6" sap2010:WorkflowViewState.IdRef="Assign_54">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TxtLocation]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[rootFolder+"\TextFolder\"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="2036,69.6" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(TxtPath)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="2036,69.6" sap2010:WorkflowViewState.IdRef="Assign_73">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[logFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[rootFolder+"\"+"DuplicateLogs.txt"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="[logFileName]" sap:VirtualizedContainerService.HintSize="2036,144" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="{}{Duplicated Files}" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="2036,10760" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Files]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="2000.8,10625.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="FileContent" />
              <Variable x:TypeArguments="x:String" Name="Email" />
              <Variable x:TypeArguments="x:String" Name="SplitEmail" />
              <Variable x:TypeArguments="x:String" Name="PhoneNo" />
              <Variable x:TypeArguments="x:String" Name="Name" />
              <Variable x:TypeArguments="x:String" Name="BracketText" />
              <Variable x:TypeArguments="x:String" Name="Nationality" />
              <Variable x:TypeArguments="sd:DataTable" Name="MyDataTable" />
              <Variable x:TypeArguments="x:String" Name="PaymentPerHr" />
              <Variable x:TypeArguments="x:String" Name="TotalTeachingHrs" />
              <Variable x:TypeArguments="x:String" Name="TeachingHrsPerWk" />
              <Variable x:TypeArguments="x:String" Name="TLPAReq" />
              <Variable x:TypeArguments="x:String" Name="Requestor" />
              <Variable x:TypeArguments="x:String" Name="ExtensionNoDattee" />
              <Variable x:TypeArguments="x:String" Name="Justification4Req" />
              <Variable x:TypeArguments="x:String" Name="NameNcommentByCC" />
              <Variable x:TypeArguments="x:String" Name="NameOfRO" />
              <Variable x:TypeArguments="x:String" Name="NameOfCO" />
              <Variable x:TypeArguments="x:String" Name="ExtNo" />
              <Variable x:TypeArguments="x:String" Name="Date1" />
              <Variable x:TypeArguments="x:String" Name="SplitNameNcommentByCO" />
              <Variable x:TypeArguments="x:String" Name="EndorsementBy" />
              <Variable x:TypeArguments="x:String" Name="DDorD" />
              <Variable x:TypeArguments="x:String" Name="Date2" />
              <Variable x:TypeArguments="x:String" Name="TSASec1" />
              <Variable x:TypeArguments="x:String" Name="TSAPR" />
              <Variable x:TypeArguments="x:String" Name="TSAComments" />
              <Variable x:TypeArguments="x:String" Name="TSASec3" />
              <Variable x:TypeArguments="x:String" Name="TSAStaffExtNo" />
              <Variable x:TypeArguments="x:String" Name="TSADate" />
              <Variable x:TypeArguments="x:String" Name="TSAStaff" />
              <Variable x:TypeArguments="x:String" Name="StaffNameNextNo" />
              <Variable x:TypeArguments="x:String" Name="CommentByCC" />
              <Variable x:TypeArguments="x:String" Name="NameOfCC" />
              <Variable x:TypeArguments="x:String" Name="TaughtInTP" />
              <Variable x:TypeArguments="x:String" Name="TaughtProgrammeName" />
              <Variable x:TypeArguments="x:String" Name="TaughtCourseType" />
              <Variable x:TypeArguments="x:String" Name="ProgrammeName" />
              <Variable x:TypeArguments="x:String" Name="ProgrammeNameAndType" />
              <Variable x:TypeArguments="x:String" Name="ProgrammeType" />
              <Variable x:TypeArguments="x:String" Name="ContractEndDate" />
              <Variable x:TypeArguments="x:String" Name="ContractStartDate" />
              <Variable x:TypeArguments="x:String" Name="SubjectToTeachDetails" />
              <Variable x:TypeArguments="x:String" Name="SubjectNames" />
              <Variable x:TypeArguments="x:String" Name="SubjectStartDates" />
              <Variable x:TypeArguments="x:String" Name="SubjectEndDates" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="DataOutputs" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="DataOutputs2" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="SubjectNameOutputs" />
              <Variable x:TypeArguments="x:String" Name="CourseTypeOption" />
              <Variable x:TypeArguments="x:String" Name="ContractEndDateOption" />
              <Variable x:TypeArguments="x:String" Name="FileName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_55">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file)]</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1957.6,72" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[file]" />
            <ui:ReadTextFile Content="[FileContent]" DisplayName="Read Text File" FileName="[file]" sap:VirtualizedContainerService.HintSize="1957.6,90.4" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1957.6,578.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Passport\)\s\s).*(?=\sNationality)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Nationality]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=☒\s)(Singaporean|Singapore Permanent Resident|Others, please specify\s.*)(?=Email Address)|(?&lt;=☒\s)(Singaporean|Singapore Permanent Resident|Others, please specify\s.*)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Email]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[SplitEmail]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Email, "Address","")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[PhoneNo]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(\d{8})").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TaughtInTP]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=☒\s)(Yes|No)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TaughtProgrammeName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=full:\s).*(?=\s\sThe programme)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[CourseTypeOption]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=The programme is a:).*(?=Name and Type)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TaughtCourseType]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(CourseTypeOption, "(?&lt;=☒\s)(Certificated\/Course|Short\/Customised Course|SGUS Course.*)(?=Name\sand\sType)|(?&lt;=☒\s)(Certificated Course|Short\/Customised Course|SGUS Course.*)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ProgrammeNameAndType]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Programme Name:\s).*(?=The contract duration)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ProgrammeName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Programme Name:\s).*(?=[☒|☐]\sCertificated Course)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ProgrammeType]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ProgrammeNameAndType, "(?&lt;=☒\s)(Certificated Course|Short\/Customised Course|SGUS Course)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ContractStartDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">1 week before the Subject Start Date</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ContractEndDateOption]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=The contract duration will be based on:Contract Start Date default:\s\s).*(?=Subject Name)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ContractEndDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ContractEndDateOption, "(?&lt;=☒\s\s)(1 week after the Subject End Date|1 week after the Exam Week.*)(?=Subject\sNameSubject)|(?&lt;=☒\s\s)(1 week after the Subject End Date|1 week after the Exam Week.*)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[SubjectToTeachDetails]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Subject End Date \(dd\/mm\/yyyy\)).*(?=Teaching Hours required)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <Sequence DisplayName="Format email to remove Con" sap:VirtualizedContainerService.HintSize="1957.6,92.8" sap2010:WorkflowViewState.IdRef="Sequence_86">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[&quot;Con&quot;.Equals(splitEmail.Substring(splitEmail.Length-3))]" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_82">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SplitEmail]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[SplitEmail.Substring(0, splitEmail.Length-3)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[&quot;Co&quot;.Equals(splitEmail.Substring(splitEmail.Length-2))]" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_80">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SplitEmail]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[SplitEmail.Substring(0, splitEmail.Length-2)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_81">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[&quot;C&quot;.Equals(splitEmail.Substring(splitEmail.Length-1))]" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_28">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_84">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SplitEmail]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[SplitEmail.Substring(0, splitEmail.Length-1)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_85">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1957.6,274.4" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,186.4" sap2010:WorkflowViewState.IdRef="Sequence_87">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="356.8,95.2" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[SubjectToTeachDetails]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:Matches sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[SubjectToTeachDetails]" IsBuilderTabModified="False" Pattern="[a-zA-Z\s\(\)]+" RegexOption="IgnoreCase, Compiled" Result="[SubjectNameOutputs]" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1957.6,274.4" sap2010:WorkflowViewState.IdRef="CommentOut_3">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,186.4" sap2010:WorkflowViewState.IdRef="Sequence_88">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="356.8,95.2" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[SubjectNameOutputs.ToString]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <Assign sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_53">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SubjectNames]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(vbCrlf, SubjectNameOutputs)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1957.6,274.4" sap2010:WorkflowViewState.IdRef="CommentOut_4">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,186.4" sap2010:WorkflowViewState.IdRef="Sequence_89">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="356.8,95.2" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[SubjectNames]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:Matches BuilderPattern="(?&lt;=[a-zA-Z\s\(\)])\d{2}\/\d{2}\/\d{4}" sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[SubjectToTeachDetails]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=[a-zA-Z\\s\\(\\)])\\d{2}\\\/\\d{2}\\\/\\d{4}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=[a-zA-Z\s\(\)])\d{2}\/\d{2}\/\d{4}" RegexOption="IgnoreCase, Compiled" Result="[DataOutputs]" />
            <Assign sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_51">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SubjectStartDates]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(vbCrlf, DataOutputs)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:Matches BuilderPattern="(?&lt;=[a-zA-Z\s\(\)]\d{2}\/\d{2}\/\d{4})\d{2}\/\d{2}\/\d{4}" sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[SubjectToTeachDetails]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=[a-zA-Z\\s\\(\\)]\\d{2}\\\/\\d{2}\\\/\\d{4})\\d{2}\\\/\\d{2}\\\/\\d{4}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=[a-zA-Z\s\(\)]\d{2}\/\d{2}\/\d{4})\d{2}\/\d{2}\/\d{4}" RegexOption="IgnoreCase, Compiled" Result="[DataOutputs2]" />
            <Assign sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_52">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SubjectEndDates]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(vbCrlf, DataOutputs2)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1957.6,860" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TeachingHrsPerWk]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=the contract).*(?=\shours per week)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TotalTeachingHrs]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Total hours).*(?=Payment Rate / Hour)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[PaymentPerHr]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Payment Rate \/ Hour S\$ \$).*(?=TLPA)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TLPAReq]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=☒\s)(To Attend|Exempted, state reason:\s.*)(?=Name of Requestor)|(?&lt;=☒\s)(To Attend|Exempted, state reason:\s.*)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Requestor]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Name of Requestor).*(?=\((The requestor will be copied when the contract is issued by HR))").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ExtensionNoDattee]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Date\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s).*(?=Justification for Request)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[ExtNo]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ExtensionNoDattee, "(\d{4})").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Date1]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ExtensionNoDattee, "(?&lt;=\d{4}).*").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Justification4Req]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Justification for Request).*(?=Name of Course Chair)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[NameNcommentByCC]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Name of Course Chair\s\s\s\s\s\s\s\sComments by Course Chair).*(?=Name of Reporting Office)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[NameOfCC]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(NameNcommentByCC, "(?&lt;=[a-z][^\s])[A-Z].*", "")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[CommentByCC]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(NameNcommentByCC, "(?&lt;=[a-z][^\s])[A-Z].*").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[NameOfRO]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=(CO)\)\s\s\s\s).*(?=\(ONSET)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[NameOfCO]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=ONSET results will be sent to the RO\)).*(?=Endorsement)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[EndorsementBy]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=☒\s)(Supported)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[DDorD]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=(?&lt;=☒\s)(Supported)).*(?=Date\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\d{2}\/([a-zA-Z]+)\/\d{2})").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[Date2]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Date\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s).*(?=For)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSASec1]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=☒\s)(Staff Card|Email Account)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSAPR]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=CommentsS\$).*(?=per hour)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSAComments]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=per hour\s\s\s).*(?=Name of TSA Staff)").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSASec3]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileContent, "(?&lt;=Extension\sNo.\s\s\s\s\s\s\s\s\s\sDate\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s).*").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSADate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(TSASec3, "(\d{1,2}\/([a-zA-Z]+)\/\d{4})").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[StaffNameNextNo]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(TSASec3, "(\d{1,2}\/([a-zA-Z]+)\/\d{4})", "")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSAStaff]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StaffNameNextNo, "[a-zA-Z\s]+").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TSAStaffExtNo]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StaffNameNextNo, "[0-9]+").Value]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:BuildDataTable DataTable="[MyDataTable]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1957.6,69.6" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_Adjunct_x0020_Lecturer&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Nationality&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Email_x0020_Address&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Phone_x0020_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Taught_x0020_In_x0020_TP&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Taught_x0020_Programme_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Taught_x0020_Course_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Programme_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Course_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Contract_x0020_Start_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Contract_x0020_End_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Subject_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Subject_x0020_Start_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Subject_x0020_End_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Teaching_x0020_Hours_x0020_Per_x0020_Week&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_Teaching_x0020_Hours&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Payment_x0020_Rate_x002F__x0020_Hr&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TLPA_x0020_Requirement&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_Requestor&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Extention_x0020_No.&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Justification_x0020_for_x0020_Request&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_CC&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Comment_x0020_by_x0020_CC&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_Reporting_x0020_Officer&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_Counter-Signing_x0020_Officer&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Endorsement_x0020_By_x0020_DD_x002F_D&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_DD_x002F_D&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Endorsement_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TSA-Item_x0020_Required_x0020_for_x0020_Adjunct_x0020_Lecturer&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TSA-Payment_x0020_Rate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TSA-Comments&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name_x0020_of_x0020_TSA_x0020_Staff&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TSA_x0020_Staff_x0020_Ext_x0020_No.&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TSA_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Name, Nationality, SplitEmail, PhoneNo, TaughtInTP, TaughtProgrammeName, TaughtCourseType, ProgrammeName, ProgrammeType,  ContractStartDate, ContractEndDate, SubjectNames, SubjectStartDates, SubjectEndDates, TeachingHrsPerWk, TotalTeachingHrs, PaymentPerHr, TLPAReq, Requestor, ExtNo, Date1, Justification4Req, NameOfCC, CommentByCC, NameOfRO, NameOfCO, EndorsementBy, DDorD, Date2, TSASec1, TSAPR, TSAComments, TSAStaff, TSAStaffExtNo, TSADate}]" DataTable="[MyDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1957.6,197.6" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1957.6,6583.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[rootFolder +&quot;/&quot; +&quot;CETApplicationFormData.xlsm&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="1924,6464" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1880.8,6372.8" sap2010:WorkflowViewState.IdRef="Sequence_44">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="FormInputs" />
                        <Variable x:TypeArguments="x:String" Name="OutputsData" />
                        <Variable x:TypeArguments="x:String" Name="variable1" />
                        <Variable x:TypeArguments="sd:DataTable" Name="FormInputsData" />
                        <Variable x:TypeArguments="sd:DataTable" Name="FilterDT" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[FormInputsData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1818.4,69.6" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <If Condition="[FormInputsData.Rows.count=0]" sap:VirtualizedContainerService.HintSize="1818.4,5819.2" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,326.4" sap2010:WorkflowViewState.IdRef="Sequence_42">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="RemovedDuplicates" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBScript.txt" DisplayName="Invoke VBA" EntryMethodName="Format_Excel" sap:VirtualizedContainerService.HintSize="356.8,97.6" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[MyDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="356.8,97.6" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="1374.4,5650.4" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="CurrentInputs" />
                              <Variable x:TypeArguments="sd:DataTable" Name="OutputDataTable" />
                              <Variable x:TypeArguments="sd:DataTable" Name="FilterDT2" />
                              <Variable x:TypeArguments="sd:DataTable" Name="FilterDT3" />
                              <Variable x:TypeArguments="sd:DataTable" Name="FilterDT4" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:FilterDataTable DataTable="[FormInputsData]" DisplayName="Previous MP (Normal duplicate)" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1331.2,172" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilterDT]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Name of Adjunct Lecturer"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Name of Adjunct Lecturer")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject Name"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject Name")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject Start Date"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject Start Date")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject End Date"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject End Date")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:FilterDataTable>
                            <ui:FilterDataTable DataTable="[FormInputsData]" DisplayName="Name Filter DataTable" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1331.2,172" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[FilterDT2]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Name of Adjunct Lecturer"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Name of Adjunct Lecturer")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:FilterDataTable>
                            <ui:FilterDataTable DataTable="[FormInputsData]" DisplayName="Subject Name DataTable" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1331.2,172" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[FilterDT3]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject Name"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject Name")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:FilterDataTable>
                            <ui:FilterDataTable DataTable="[FormInputsData]" DisplayName="Start and End DataTable" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1331.2,172" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[FilterDT4]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject Start Date"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject Start Date")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Subject End Date"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:Object">[MyDataTable.Rows(0)("Subject End Date")]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:FilterDataTable>
                            <If Condition="[FilterDT.RowCount&gt;0]" DisplayName="Previous MP (Normal Duplicate)" sap:VirtualizedContainerService.HintSize="1331.2,1707.2" sap2010:WorkflowViewState.IdRef="If_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="887.2,1538.4" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="DuplicateData" />
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="WorkBookSheets" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="844,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Duplicates has been found    : &quot; + FileName]" />
                                  <ui:AppendLine DisplayName="Append Line" FileName="[logFileName]" sap:VirtualizedContainerService.HintSize="844,144" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[System.DateTime.Now.ToString +&quot;: Duplicates has been found  - &quot; + FileName]" UseDefaultEncoding="False" />
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="844,32" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_5" Sheets="[WorkBookSheets]" />
                                  <If Condition="[WorkBookSheets.Contains(&quot;Duplicate&quot;)]" sap:VirtualizedContainerService.HintSize="844,329.6" sap2010:WorkflowViewState.IdRef="If_14">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,160.8" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="Assign_64">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,160.8" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="Assign_65">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <If Condition="[CreateDuplicate]" sap:VirtualizedContainerService.HintSize="844,495.2" sap2010:WorkflowViewState.IdRef="If_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,326.4" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[MyDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="356.8,97.6" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="Duplicate" StartingCell="A1" />
                                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBScript.txt" DisplayName="Invoke VBA" EntryMethodName="Format_Excel" sap:VirtualizedContainerService.HintSize="356.8,97.6" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <ui:ExcelAppendRange DataTable="[MyDataTable]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,97.6" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_10" SheetName="Duplicate">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelAppendRange>
                                    </If.Else>
                                  </If>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[logFileName]" sap:VirtualizedContainerService.HintSize="844,144" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[System.DateTime.Now.ToString +&quot;: Duplicates added in Duplicate Sheet Successfully  - &quot; + FileName]" UseDefaultEncoding="False" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,188.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[MyDataTable]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="356.8,97.6" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_11" SheetName="Sheet1">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelAppendRange>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[FilterDT.RowCount=0 and FilterDT2.RowCount&gt;0]" DisplayName="Name Filter Excel" sap:VirtualizedContainerService.HintSize="1331.2,997.6" sap2010:WorkflowViewState.IdRef="If_19">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="887.2,799.2" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="DuplicateData" />
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="WorkBookSheets" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="844,32" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_6" Sheets="[WorkBookSheets]" />
                                  <If Condition="[WorkBookSheets.Contains(&quot;NameDuplicate&quot;)]" sap:VirtualizedContainerService.HintSize="844,329.6" sap2010:WorkflowViewState.IdRef="If_17">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,160.8" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="Assign_66">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,160.8" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="Assign_67">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <If Condition="[CreateDuplicate]" sap:VirtualizedContainerService.HintSize="844,266.4" sap2010:WorkflowViewState.IdRef="If_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[MyDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,97.6" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="NameDuplicate" StartingCell="A1" />
                                    </If.Then>
                                    <If.Else>
                                      <ui:ExcelAppendRange DataTable="[MyDataTable]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,97.6" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_12" SheetName="NameDuplicate">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelAppendRange>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                            </If>
                            <If Condition="[FilterDT.RowCount=0 and FilterDT3.RowCount&gt;0]" DisplayName="Subject Filter Excel" sap:VirtualizedContainerService.HintSize="1172,943.2" sap2010:WorkflowViewState.IdRef="If_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="752.8,754.4" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="DuplicateData" />
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="WorkBookSheets" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="711.2,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_7" Sheets="[WorkBookSheets]" />
                                  <If Condition="[WorkBookSheets.Contains(&quot;SubjectDuplicate&quot;)]" sap:VirtualizedContainerService.HintSize="711.2,312" sap2010:WorkflowViewState.IdRef="If_20">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <If Condition="[CreateDuplicate]" sap:VirtualizedContainerService.HintSize="711.2,247.2" sap2010:WorkflowViewState.IdRef="If_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[MyDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="SubjectDuplicate" StartingCell="A1" />
                                    </If.Then>
                                    <If.Else>
                                      <ui:ExcelAppendRange DataTable="[MyDataTable]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_14" SheetName="SubjectDuplicate">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelAppendRange>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="200,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[FilterDT.RowCount=0 and FilterDT4.RowCount&gt;0]" DisplayName="Start and End Date Filter Excel" sap:VirtualizedContainerService.HintSize="1172,943.2" sap2010:WorkflowViewState.IdRef="If_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="752.8,754.4" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="DuplicateData" />
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="WorkBookSheets" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="711.2,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_8" Sheets="[WorkBookSheets]" />
                                  <If Condition="[WorkBookSheets.Contains(&quot;DatesDuplicate&quot;)]" sap:VirtualizedContainerService.HintSize="711.2,312" sap2010:WorkflowViewState.IdRef="If_23">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[CreateDuplicate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <If Condition="[CreateDuplicate]" sap:VirtualizedContainerService.HintSize="711.2,247.2" sap2010:WorkflowViewState.IdRef="If_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[MyDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="DatesDuplicate" StartingCell="A1" />
                                    </If.Then>
                                    <If.Else>
                                      <ui:ExcelAppendRange DataTable="[MyDataTable]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_16" SheetName="DatesDuplicate">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelAppendRange>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="200,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="1632.8,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[TxtLocation + FileName + &quot;.txt&quot;]" />
                      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[rootFolder+&quot;\Processed\&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="1632.8,160" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[rootFolder+&quot;\WordFolder\&quot;+FileName+&quot;.docm&quot;]" />
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>